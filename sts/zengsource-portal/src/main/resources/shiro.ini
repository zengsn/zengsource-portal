[main] 
# realms to be used
hibernateRealm=com.zengsource.twoabcc.shiro.HibernateRealm
# any object property is automatically configurable in Shiro.ini file
#hibernateRealm.jndiDataSourceName=jdbc/SimpleShiroSecuredApplicationDB 
# the realm should handle also authorization
hibernateRealm.permissionsLookupEnabled=true
# If not filled, subclasses of JdbcRealm assume "select password from users where username = ?"
# first result column is password, second result column is salt 
hibernateRealm.authenticationQuery = select password, salt from sec_users where name = ?
# If not filled, subclasses of JdbcRealm assume "select role_name from user_roles where username = ?"
hibernateRealm.userRolesQuery = select role_name from sec_users_roles where user_name = ?
# If not filled, subclasses of JdbcRealm assume "select permission from roles_permissions where role_name = ?"
hibernateRealm.permissionsQuery = select permissions from sec_roles_permissions where role_name = ?


# password hashing specification
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName=SHA-256
hibernateRealm.credentialsMatcher = $sha256Matcher

# replace form authentication filter with verbose filter 
authc = com.zengsource.twoabcc.shiro.VerboseFormAuthenticationFilter
# request parameter with login error information; if not present filter assumes 'shiroLoginFailure'
authc.failureKeyAttribute=simpleShiroApplicationLoginFailure
# specify login page
authc.loginUrl = /signin.jxp
# name of request parameter with username; if not present filter assumes 'username'
authc.usernameParam = username
# name of request parameter with password; if not present filter assumes 'password'
authc.passwordParam = password
# does the user wish to be remembered?; if not present filter assumes 'rememberMe'
authc.rememberMeParam = remember
# redirect after successful login
authc.successUrl  = /index.jxp

# roles filter: redirect to error page if user does not have access rights
roles.unauthorizedUrl = /nologin.jxp

[urls]
# force ssl for login page 
#/signin.jxp=ssl[8443], authc

# only users with some roles are allowed to use role-specific pages 
#/question/**=authc,roles[member, admin]
#/admin/**=authc,roles[admin]
/simpleshirosecuredapplication/repairmen/**=authc, roles[repairman]
/simpleshirosecuredapplication/sales/**=authc, roles[sales]
/simpleshirosecuredapplication/scientists/**=authc, roles[scientist]
/simpleshirosecuredapplication/adminarea/**=authc, roles[Administrator]
/system/=authc,roles[admin]
/system/**.jxp=authc,roles[admin]

# enable authc filter for all application pages
#/**=authc
